input {
    tcp {
        port => 5514
        type => "syslog"
    }
    udp {
        port => 5514
        type => "syslog"
    }
}

filter {
    if [type] == "syslog" {
        grok {
            patterns_dir => {{ config.patterns_dir }}
            match => [ "message", "<%{POSINT:priority}>%{SYSLOGBASE} %{GREEDYDATA:message}" ]
            match => [ "message", "%{CISCOSG300SYSLOG}" ]
            match => [ "message", "%{ASUSRTSYSLOG}" ]
            overwrite => [ "message" ]
        }
    }

    # Parse iptables log messages
    if [type] == "syslog" and [message] =~ /\sIPTABLES_.*?:\s/ {
        grok {
            patterns_dir => {{ config.patterns_dir }}
            match => [ "message", "%{IPTABLESTCPORUDP}" ]
            match => [ "message", "%{IPTABLESICMP}" ]
            add_tag => [ "iptables" ]
            remove_field => [ "message" ]
        }
    }

    # Parse bad logon attempts
    if [type] == "syslog" and [program] == "sshd" {
        grok {
            patterns_dir => {{ config.patterns_dir }}
            match => [ "message", "Failed password for invalid user %{USER:bad_user} from %{IP:bad_ip}" ]
            match => [ "message", "Failed password for %{USER:bad_user} from %{IP:bad_ip}" ]
            tag_on_failure => []
        }

        if "[bad_ip]" {
            geoip {
                source => "bad_ip"
                target => "geoip"
            }
        }
    }

    # Parse messages about sudo command executions
    if [type] == "syslog" and [program] == "sudo" {
        grok {
            patterns_dir => {{ config.patterns_dir }}
            match => [ "message", "%{USER:user} : TTY=%{DATA:tty} ; PWD=%{DATA:pwd} ; USER=%{USER:sudo_user} ; COMMAND=%{GREEDYDATA:sudo_command}" ]
            tag_on_failure => []
        }
    }
}
