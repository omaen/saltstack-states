input {
    tcp {
        port => 5514
        type => "syslog"
    }
    udp {
        port => 5514
        type => "syslog"
    }
}

filter {
    if [type] == "syslog" {
        grok {
            patterns_dir => {{ config.patterns_dir }}
            match => [ "message", "<%{POSINT:priority}>%{SYSLOGBASE} %{GREEDYDATA:message}" ]
            match => [ "message", "%{CISCOSG300SYSLOG}" ]
            match => [ "message", "%{ASUSRTSYSLOG}" ]
            overwrite => [ "message" ]
        }
    }

    # Parse iptables log messages
    if [type] == "syslog" and [message] =~ /\sIPTABLES_.*?:\s/ {
        grok {
            patterns_dir => {{ config.patterns_dir }}
            match => [ "message", "%{IPV4TCPORUDP}" ]
            match => [ "message", "%{IPV4ICMP}" ]
            match => [ "message", "%{IPV6TCPORUDP}" ]
            match => [ "message", "%{IPV6ICMP}" ]
            match => [ "message", "%{IPTABLESCATCHALL}" ]
            add_tag => [ "iptables" ]
            remove_field => [ "message" ]
        }

        if "[src_ip]" {
            cidr {
                address => [ "%{src_ip}" ]
                network => [
                    "10.0.0.0/8",
                    "172.16.0.0/12",
                    "192.168.0.0/16",
                    "224.0.0.0/4",
                    "255.255.255.255/32",
                    "169.254.0.0/16",
                    "127.0.0.0/8"
                ]
                add_tag => [ "no_geoip" ]
            }

            if "no_geoip" in [tags] {
                mutate {
                    remove_tag => [ "no_geoip" ]
                }
            } else {
                geoip {
                    source => "src_ip"
                }
            }
        }

        if "[dst_ip]" {
            cidr {
                address => [ "%{dst_ip}" ]
                network => [
                    "10.0.0.0/8",
                    "172.16.0.0/12",
                    "192.168.0.0/16",
                    "224.0.0.0/4",
                    "255.255.255.255/32",
                    "169.254.0.0/16",
                    "127.0.0.0/8"
                ]
                add_tag => [ "no_geoip" ]
            }

            if "no_geoip" in [tags] {
                mutate {
                    remove_tag => [ "no_geoip" ]
                }
            } else {
                geoip {
                    source => "dst_ip"
                }
            }
        }
    }

    # Parse bad logon attempts
    if [type] == "syslog" and [program] == "sshd" {
        grok {
            patterns_dir => {{ config.patterns_dir }}
            match => [ "message", "Failed password for invalid user %{USER:bad_user} from %{IP:bad_ip}" ]
            match => [ "message", "Failed password for %{USER:bad_user} from %{IP:bad_ip}" ]
            tag_on_failure => []
        }

        if "[bad_ip]" {
            geoip {
                source => "bad_ip"
            }
        }
    }

    # Parse messages about sudo command executions
    if [type] == "syslog" and [program] == "sudo" {
        grok {
            patterns_dir => {{ config.patterns_dir }}
            match => [ "message", "%{USER:user} : TTY=%{DATA:tty} ; PWD=%{DATA:pwd} ; USER=%{USER:sudo_user} ; COMMAND=%{GREEDYDATA:sudo_command}" ]
            tag_on_failure => []
        }
    }
}
