{{ salt['pillar.get']('salt:managed_file_header', '# This file is managed by Salt') }}

# The loopback network interface
auto lo
iface lo inet loopback

{%- for namespace in config.get('namespaces', []) %}

# Network namespace "{{ namespace }}"
allow-auto {{ namespace }}
iface {{ namespace }} inet manual
    up ip netns add ${IFACE}
    post-up ip netns exec ${IFACE} ip link set lo up
    down ip netns del ${IFACE}
{%- endfor %}

{%- for vrf in config.get('vrfs', []) %}

# VRF "{{ vrf }}"
allow-auto {{ vrf }}
iface {{ vrf }} inet manual
    pre-up echo "{{ 500 + loop.index0 }} vrf-{{ vrf }}" > /etc/iproute2/rt_tables.d/vrf-{{ vrf }}.conf
    pre-up ip link add ${IFACE} type vrf table vrf-{{ vrf }}
    post-down rm -f /etc/iproute2/rt_tables.d/vrf-{{ vrf }}.conf
    post-down ip link del ${IFACE}
{%- endfor %}

{%- for interface in config.interfaces %}

# {{ interface.get('description', interface.get('name')) }}
allow-{{ interface.get('allow', 'auto') }} {{ interface.get('name') }}
iface {{ interface.get('name') }} inet {{ interface.get('mode') }}
    {%- set params = interface.get('config', {}) %}

    {%- if interface.get('vrf') %}
    pre-up ip link set dev ${IFACE} vrf {{ interface.vrf }}
    post-down ip link set dev ${IFACE} nomaster
    {%- if params.get('gateway') %}
    post-up ip route add default via {{ params.gateway }} vrf {{ interface.vrf }}
    pre-down ip route del default via {{ params.gateway }} vrf {{ interface.vrf }}
    {%- do params.pop('gateway') %}
    {%- endif %}
    {%- endif %}

    {%- for k, v in params.iteritems() %}
    {%- if v is iterable and v is not string %}
    {%- for i in v %}
    {{ k }} {{ i }}
    {%- endfor %}
    {%- else %}
    {{ k }} {{ v }}
    {%- endif %}
    {%- endfor %}
{%- endfor %}
