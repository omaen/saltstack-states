#
# This file is managed by Salt. Changes will be overwritten!
#

# The loopback network interface
auto lo
iface lo inet loopback

{%- for namespace in config.get('namespaces', []) %}

# Network namespace: {{ namespace }}
allow-auto {{ namespace }}
iface {{ namespace }} inet manual
    up ip netns add ${IFACE}
    up ip netns exec ${IFACE} ip link set lo up
    down ip netns del ${IFACE}
{%- endfor %}

{%- for vrf in config.get('vrfs', []) %}

# VRF: {{ vrf }}
allow-auto {{ vrf }}
iface {{ vrf }} inet manual
    pre-up echo "{{ 500 + loop.index0 }} ${IFACE}" > /etc/iproute2/rt_tables.d/${IFACE}.conf
    pre-up ip link add ${IFACE} type vrf table ${IFACE}
    post-down rm -f /etc/iproute2/rt_tables.d/${IFACE}.conf
    post-down ip link del ${IFACE}
{%- endfor %}

{%- set already_allowed = [] %}
{%- for interface in config.interfaces %}
{%- set auto_ns_exec = [] %}

{%- set family = interface.get('family', 'inet') %}
{%- set ip_addr = 'ip' %}
{%- if family == 'inet6' %}
    {%- set ip_addr = 'ip -6' %}
{%- endif %}

# {{ interface.get('description', interface.get('name')) }}
{%- if not interface.get('name') in already_allowed %}
allow-{{ interface.get('allow', 'auto') }} {{ interface.get('name') }}
    {%- do already_allowed.append(interface.get('name')) %}
{%- endif %}
{%- if interface.get('namespace') %}
    {%- set mode = 'manual' %}
    {%- set ns_exec = 'ip netns exec %s' % interface.namespace %}
    {%- set auto_ns_exec = ['pre-up', 'up', 'post-up', 'pre-down', 'down', 'post-down'] %}
{%- else %}
    {%- set mode = interface.mode %}
{%- endif %}
iface {{ interface.get('name') }} {{ family }} {{ mode }}
    {%- set params = interface.get('config', {}) %}

    {%- if family == 'inet6' %}
        {%- set ifname = (interface.get('name')|replace('.', '/')).split(':')[0] %}
    {#-
    It is important to run this after the interface is up, as the interface
    does not necessarily exist during boot, causing the network configuration
    to fail
    #}
    up sysctl -q -w net.ipv6.conf.{{ ifname }}.accept_ra_rt_info_max_plen=64
    {%- endif %}

    {%- if interface.get('vrf') %}
    pre-up ip link set dev ${IFACE} vrf {{ interface.vrf }}
        {%- if params.get('gateway') %}
    post-up ip route add default via {{ params.gateway }} vrf {{ interface.vrf }}
    pre-down ip route del default via {{ params.gateway }} vrf {{ interface.vrf }}
            {%- do params.pop('gateway') %}
        {%- endif %}
    {%- elif interface.get('namespace') %}
    pre-up ip link set ${IFACE} netns {{ interface.namespace }}
        {%- if params.get('address') %}
    up {{ ns_exec }} {{ ip_addr }} add {{ params.address }} dev ${IFACE}
    up {{ ns_exec }} ip link set ${IFACE} up
            {%- if params.get('gateway') %}
    up {{ ns_exec }} ip route add default via {{ params.gateway }}
    down {{ ns_exec }} ip route del default via {{ params.gateway }}
                {%- do params.pop('gateway') %}
            {%- endif %}
    down {{ ns_exec }} ip link set ${IFACE} down
    down {{ ns_exec }} {{ ip_addr }} del {{ params.address }} dev ${IFACE}
            {%- do params.pop('address') %}
        {%- else %}
    up {{ ns_exec }} ip link set ${IFACE} up
    down {{ ns_exec }} ip link set ${IFACE} down
        {%- endif %}
    {%- endif %}

    {%- for k, v in params.iteritems() %}
        {%- if v is iterable and v is not string %}
            {%- for i in v %}
                {%- if k in auto_ns_exec %}
    {{ k }} {{ ns_exec }} {{ i }}
                {%- else %}
    {{ k }} {{ i }}
                {%- endif %}
            {%- endfor %}
        {%- else %}
            {%- if k in auto_ns_exec %}
    {{ k }} {{ ns_exec }} {{ v }}
            {%- else %}
    {{ k }} {{ v }}
            {%- endif %}
        {%- endif %}
    {%- endfor %}

    {%- if interface.get('vrf') %}
    post-down ip link set dev ${IFACE} nomaster
    {%- elif interface.get('namespace') %}
    post-down {{ ns_exec }} ip link set ${IFACE} netns 1
    {%- endif %}
{%- endfor %}
